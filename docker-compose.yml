version: '3'
name: rust_app_api
services:
  api-rust:
    restart: unless-stopped
    env_file:
      - ./.env.production
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_MAXAGE: ${JWT_MAXAGE}
      STORAGE_DIR: ${STORAGE_DIR}
      PORT: ${PORT}
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
    volumes:
      - rfa_api_volume:/src/usr/app/storage
    networks:
      - rust_app_network
    ports:
      - "8090:8090"

  mysql:
    image: mysql:8.3.0
    container_name: rfa_mysql_db
    env_file:
      - ./.env.production
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "6500:3306"
    volumes:
      - rfa_mysql_volume:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    networks:
      - rust_app_network

  redis:
    image: redis:alpine3.17
    container_name: rfa_redis_db
    ports:
      - '6379:6379'
    volumes:
      - rfa_redis_volume:/data
    networks:
      - rust_app_network

volumes:
  rfa_mysql_volume:
  rfa_redis_volume:
  rfa_api_volume:


networks:
  rust_app_network:
